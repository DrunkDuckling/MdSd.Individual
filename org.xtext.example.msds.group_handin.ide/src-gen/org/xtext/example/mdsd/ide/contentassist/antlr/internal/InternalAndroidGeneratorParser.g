/*
 * generated by Xtext 2.21.0
 */
parser grammar InternalAndroidGeneratorParser;

options {
	tokenVocab=InternalAndroidGeneratorLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package org.xtext.example.mdsd.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mdsd.services.AndroidGeneratorGrammarAccess;

}
@members {
	private AndroidGeneratorGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("LessThanSign", "'<'");
		tokenNameToValue.put("EqualsSign", "'='");
		tokenNameToValue.put("GreaterThanSign", "'>'");
		tokenNameToValue.put("F", "'f'");
		tokenNameToValue.put("M", "'m'");
		tokenNameToValue.put("App", "'App'");
		tokenNameToValue.put("Map", "'Map'");
		tokenNameToValue.put("Dist", "'Dist'");
		tokenNameToValue.put("Model", "'Model'");
		tokenNameToValue.put("Toast", "'Toast'");
		tokenNameToValue.put("Bundle", "'Bundle'");
		tokenNameToValue.put("Button", "'Button'");
		tokenNameToValue.put("Holder", "'Holder'");
		tokenNameToValue.put("Content", "'Content'");
		tokenNameToValue.put("MinSDK", "'Min-SDK'");
		tokenNameToValue.put("Spinner", "'Spinner'");
		tokenNameToValue.put("EditText", "'EditText'");
		tokenNameToValue.put("Elements", "'Elements'");
		tokenNameToValue.put("Fragment", "'Fragment'");
		tokenNameToValue.put("Settings", "'Settings'");
		tokenNameToValue.put("Textview", "'Textview'");
		tokenNameToValue.put("TargetSDK", "'Target-SDK'");
		tokenNameToValue.put("AndroidSDK", "'Android-SDK'");
		tokenNameToValue.put("FilterQuery", "'FilterQuery'");
		tokenNameToValue.put("Permissions", "'Permissions'");
	}

	public void setGrammarAccess(AndroidGeneratorGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleAndroidAppProject
entryRuleAndroidAppProject
:
{ before(grammarAccess.getAndroidAppProjectRule()); }
	 ruleAndroidAppProject
{ after(grammarAccess.getAndroidAppProjectRule()); } 
	 EOF 
;

// Rule AndroidAppProject
ruleAndroidAppProject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndroidAppProjectAccess().getApplicationsAssignment()); }
		(rule__AndroidAppProject__ApplicationsAssignment)*
		{ after(grammarAccess.getAndroidAppProjectAccess().getApplicationsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleApplication
entryRuleApplication
:
{ before(grammarAccess.getApplicationRule()); }
	 ruleApplication
{ after(grammarAccess.getApplicationRule()); } 
	 EOF 
;

// Rule Application
ruleApplication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getApplicationAccess().getGroup()); }
		(rule__Application__Group__0)
		{ after(grammarAccess.getApplicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleApplicationAttribute
entryRuleApplicationAttribute
:
{ before(grammarAccess.getApplicationAttributeRule()); }
	 ruleApplicationAttribute
{ after(grammarAccess.getApplicationAttributeRule()); } 
	 EOF 
;

// Rule ApplicationAttribute
ruleApplicationAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getApplicationAttributeAccess().getAlternatives()); }
		(rule__ApplicationAttribute__Alternatives)
		{ after(grammarAccess.getApplicationAttributeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleApplicationVersion
entryRuleApplicationVersion
:
{ before(grammarAccess.getApplicationVersionRule()); }
	 ruleApplicationVersion
{ after(grammarAccess.getApplicationVersionRule()); } 
	 EOF 
;

// Rule ApplicationVersion
ruleApplicationVersion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getApplicationVersionAccess().getGroup()); }
		(rule__ApplicationVersion__Group__0)
		{ after(grammarAccess.getApplicationVersionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTargetSDK
entryRuleTargetSDK
:
{ before(grammarAccess.getTargetSDKRule()); }
	 ruleTargetSDK
{ after(grammarAccess.getTargetSDKRule()); } 
	 EOF 
;

// Rule TargetSDK
ruleTargetSDK 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTargetSDKAccess().getGroup()); }
		(rule__TargetSDK__Group__0)
		{ after(grammarAccess.getTargetSDKAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMinSDK
entryRuleMinSDK
:
{ before(grammarAccess.getMinSDKRule()); }
	 ruleMinSDK
{ after(grammarAccess.getMinSDKRule()); } 
	 EOF 
;

// Rule MinSDK
ruleMinSDK 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMinSDKAccess().getGroup()); }
		(rule__MinSDK__Group__0)
		{ after(grammarAccess.getMinSDKAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleApplicationPermissionList
entryRuleApplicationPermissionList
:
{ before(grammarAccess.getApplicationPermissionListRule()); }
	 ruleApplicationPermissionList
{ after(grammarAccess.getApplicationPermissionListRule()); } 
	 EOF 
;

// Rule ApplicationPermissionList
ruleApplicationPermissionList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getApplicationPermissionListAccess().getGroup()); }
		(rule__ApplicationPermissionList__Group__0)
		{ after(grammarAccess.getApplicationPermissionListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePermission
entryRulePermission
:
{ before(grammarAccess.getPermissionRule()); }
	 rulePermission
{ after(grammarAccess.getPermissionRule()); } 
	 EOF 
;

// Rule Permission
rulePermission 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPermissionAccess().getNameAssignment()); }
		(rule__Permission__NameAssignment)
		{ after(grammarAccess.getPermissionAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleApplicationElementList
entryRuleApplicationElementList
:
{ before(grammarAccess.getApplicationElementListRule()); }
	 ruleApplicationElementList
{ after(grammarAccess.getApplicationElementListRule()); } 
	 EOF 
;

// Rule ApplicationElementList
ruleApplicationElementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getApplicationElementListAccess().getGroup()); }
		(rule__ApplicationElementList__Group__0)
		{ after(grammarAccess.getApplicationElementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleApplicationElement
entryRuleApplicationElement
:
{ before(grammarAccess.getApplicationElementRule()); }
	 ruleApplicationElement
{ after(grammarAccess.getApplicationElementRule()); } 
	 EOF 
;

// Rule ApplicationElement
ruleApplicationElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getApplicationElementAccess().getAlternatives()); }
		(rule__ApplicationElement__Alternatives)
		{ after(grammarAccess.getApplicationElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFragment
entryRuleFragment
:
{ before(grammarAccess.getFragmentRule()); }
	 ruleFragment
{ after(grammarAccess.getFragmentRule()); } 
	 EOF 
;

// Rule Fragment
ruleFragment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFragmentAccess().getGroup()); }
		(rule__Fragment__Group__0)
		{ after(grammarAccess.getFragmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFragmentLayoutAttributes
entryRuleFragmentLayoutAttributes
:
{ before(grammarAccess.getFragmentLayoutAttributesRule()); }
	 ruleFragmentLayoutAttributes
{ after(grammarAccess.getFragmentLayoutAttributesRule()); } 
	 EOF 
;

// Rule FragmentLayoutAttributes
ruleFragmentLayoutAttributes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFragmentLayoutAttributesAccess().getGroup()); }
		(rule__FragmentLayoutAttributes__Group__0)
		{ after(grammarAccess.getFragmentLayoutAttributesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLayoutElement
entryRuleLayoutElement
:
{ before(grammarAccess.getLayoutElementRule()); }
	 ruleLayoutElement
{ after(grammarAccess.getLayoutElementRule()); } 
	 EOF 
;

// Rule LayoutElement
ruleLayoutElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLayoutElementAccess().getAlternatives()); }
		(rule__LayoutElement__Alternatives)
		{ after(grammarAccess.getLayoutElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataholders
entryRuleDataholders
:
{ before(grammarAccess.getDataholdersRule()); }
	 ruleDataholders
{ after(grammarAccess.getDataholdersRule()); } 
	 EOF 
;

// Rule Dataholders
ruleDataholders 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataholdersAccess().getAlternatives()); }
		(rule__Dataholders__Alternatives)
		{ after(grammarAccess.getDataholdersAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeMap
entryRuleTypeMap
:
{ before(grammarAccess.getTypeMapRule()); }
	 ruleTypeMap
{ after(grammarAccess.getTypeMapRule()); } 
	 EOF 
;

// Rule TypeMap
ruleTypeMap 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeMapAccess().getGroup()); }
		(rule__TypeMap__Group__0)
		{ after(grammarAccess.getTypeMapAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSetting
entryRuleTypeSetting
:
{ before(grammarAccess.getTypeSettingRule()); }
	 ruleTypeSetting
{ after(grammarAccess.getTypeSettingRule()); } 
	 EOF 
;

// Rule TypeSetting
ruleTypeSetting 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSettingAccess().getGroup()); }
		(rule__TypeSetting__Group__0)
		{ after(grammarAccess.getTypeSettingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFragmentTypeAttributes
entryRuleFragmentTypeAttributes
:
{ before(grammarAccess.getFragmentTypeAttributesRule()); }
	 ruleFragmentTypeAttributes
{ after(grammarAccess.getFragmentTypeAttributesRule()); } 
	 EOF 
;

// Rule FragmentTypeAttributes
ruleFragmentTypeAttributes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFragmentTypeAttributesAccess().getFilterAssignment()); }
		(rule__FragmentTypeAttributes__FilterAssignment)
		{ after(grammarAccess.getFragmentTypeAttributesAccess().getFilterAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEditText
entryRuleEditText
:
{ before(grammarAccess.getEditTextRule()); }
	 ruleEditText
{ after(grammarAccess.getEditTextRule()); } 
	 EOF 
;

// Rule EditText
ruleEditText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEditTextAccess().getGroup()); }
		(rule__EditText__Group__0)
		{ after(grammarAccess.getEditTextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpinner
entryRuleSpinner
:
{ before(grammarAccess.getSpinnerRule()); }
	 ruleSpinner
{ after(grammarAccess.getSpinnerRule()); } 
	 EOF 
;

// Rule Spinner
ruleSpinner 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpinnerAccess().getGroup()); }
		(rule__Spinner__Group__0)
		{ after(grammarAccess.getSpinnerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpinnerCon
entryRuleSpinnerCon
:
{ before(grammarAccess.getSpinnerConRule()); }
	 ruleSpinnerCon
{ after(grammarAccess.getSpinnerConRule()); } 
	 EOF 
;

// Rule SpinnerCon
ruleSpinnerCon 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpinnerConAccess().getTextAssignment()); }
		(rule__SpinnerCon__TextAssignment)
		{ after(grammarAccess.getSpinnerConAccess().getTextAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTextView
entryRuleTextView
:
{ before(grammarAccess.getTextViewRule()); }
	 ruleTextView
{ after(grammarAccess.getTextViewRule()); } 
	 EOF 
;

// Rule TextView
ruleTextView 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextViewAccess().getGroup()); }
		(rule__TextView__Group__0)
		{ after(grammarAccess.getTextViewAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleButton
entryRuleButton
:
{ before(grammarAccess.getButtonRule()); }
	 ruleButton
{ after(grammarAccess.getButtonRule()); } 
	 EOF 
;

// Rule Button
ruleButton 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getButtonAccess().getGroup()); }
		(rule__Button__Group__0)
		{ after(grammarAccess.getButtonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleButtonActions
entryRuleButtonActions
:
{ before(grammarAccess.getButtonActionsRule()); }
	 ruleButtonActions
{ after(grammarAccess.getButtonActionsRule()); } 
	 EOF 
;

// Rule ButtonActions
ruleButtonActions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getButtonActionsAccess().getAlternatives()); }
		(rule__ButtonActions__Alternatives)
		{ after(grammarAccess.getButtonActionsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleToast
entryRuleToast
:
{ before(grammarAccess.getToastRule()); }
	 ruleToast
{ after(grammarAccess.getToastRule()); } 
	 EOF 
;

// Rule Toast
ruleToast 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getToastAccess().getGroup()); }
		(rule__Toast__Group__0)
		{ after(grammarAccess.getToastAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBundle
entryRuleBundle
:
{ before(grammarAccess.getBundleRule()); }
	 ruleBundle
{ after(grammarAccess.getBundleRule()); } 
	 EOF 
;

// Rule Bundle
ruleBundle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBundleAccess().getGroup()); }
		(rule__Bundle__Group__0)
		{ after(grammarAccess.getBundleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHolder
entryRuleHolder
:
{ before(grammarAccess.getHolderRule()); }
	 ruleHolder
{ after(grammarAccess.getHolderRule()); } 
	 EOF 
;

// Rule Holder
ruleHolder 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHolderAccess().getGroup()); }
		(rule__Holder__Group__0)
		{ after(grammarAccess.getHolderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilterQuery
entryRuleFilterQuery
:
{ before(grammarAccess.getFilterQueryRule()); }
	 ruleFilterQuery
{ after(grammarAccess.getFilterQueryRule()); } 
	 EOF 
;

// Rule FilterQuery
ruleFilterQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterQueryAccess().getGroup()); }
		(rule__FilterQuery__Group__0)
		{ after(grammarAccess.getFilterQueryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilterAttributes
entryRuleFilterAttributes
:
{ before(grammarAccess.getFilterAttributesRule()); }
	 ruleFilterAttributes
{ after(grammarAccess.getFilterAttributesRule()); } 
	 EOF 
;

// Rule FilterAttributes
ruleFilterAttributes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterAttributesAccess().getDistanceAssignment()); }
		(rule__FilterAttributes__DistanceAssignment)
		{ after(grammarAccess.getFilterAttributesAccess().getDistanceAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDistance
entryRuleDistance
:
{ before(grammarAccess.getDistanceRule()); }
	 ruleDistance
{ after(grammarAccess.getDistanceRule()); } 
	 EOF 
;

// Rule Distance
ruleDistance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDistanceAccess().getGroup()); }
		(rule__Distance__Group__0)
		{ after(grammarAccess.getDistanceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumber
entryRuleNumber
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getValueAssignment()); }
		(rule__Number__ValueAssignment)
		{ after(grammarAccess.getNumberAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperator
entryRuleOperator
:
{ before(grammarAccess.getOperatorRule()); }
	 ruleOperator
{ after(grammarAccess.getOperatorRule()); } 
	 EOF 
;

// Rule Operator
ruleOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
		(rule__Operator__Alternatives)
		{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnit
entryRuleUnit
:
{ before(grammarAccess.getUnitRule()); }
	 ruleUnit
{ after(grammarAccess.getUnitRule()); } 
	 EOF 
;

// Rule Unit
ruleUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitAccess().getAlternatives()); }
		(rule__Unit__Alternatives)
		{ after(grammarAccess.getUnitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationAttribute__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationAttributeAccess().getApplicationVersionParserRuleCall_0()); }
		ruleApplicationVersion
		{ after(grammarAccess.getApplicationAttributeAccess().getApplicationVersionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getApplicationAttributeAccess().getApplicationPermissionListParserRuleCall_1()); }
		ruleApplicationPermissionList
		{ after(grammarAccess.getApplicationAttributeAccess().getApplicationPermissionListParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getApplicationAttributeAccess().getApplicationElementListParserRuleCall_2()); }
		ruleApplicationElementList
		{ after(grammarAccess.getApplicationAttributeAccess().getApplicationElementListParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationElementAccess().getFragmentParserRuleCall_0()); }
		ruleFragment
		{ after(grammarAccess.getApplicationElementAccess().getFragmentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getApplicationElementAccess().getModelParserRuleCall_1()); }
		ruleModel
		{ after(grammarAccess.getApplicationElementAccess().getModelParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayoutElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayoutElementAccess().getButtonParserRuleCall_0()); }
		ruleButton
		{ after(grammarAccess.getLayoutElementAccess().getButtonParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLayoutElementAccess().getDataholdersParserRuleCall_1()); }
		ruleDataholders
		{ after(grammarAccess.getLayoutElementAccess().getDataholdersParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLayoutElementAccess().getTypeMapParserRuleCall_2()); }
		ruleTypeMap
		{ after(grammarAccess.getLayoutElementAccess().getTypeMapParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLayoutElementAccess().getTypeSettingParserRuleCall_3()); }
		ruleTypeSetting
		{ after(grammarAccess.getLayoutElementAccess().getTypeSettingParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataholders__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataholdersAccess().getEditTextParserRuleCall_0()); }
		ruleEditText
		{ after(grammarAccess.getDataholdersAccess().getEditTextParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataholdersAccess().getSpinnerParserRuleCall_1()); }
		ruleSpinner
		{ after(grammarAccess.getDataholdersAccess().getSpinnerParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataholdersAccess().getTextViewParserRuleCall_2()); }
		ruleTextView
		{ after(grammarAccess.getDataholdersAccess().getTextViewParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ButtonActions__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonActionsAccess().getToastParserRuleCall_0()); }
		ruleToast
		{ after(grammarAccess.getButtonActionsAccess().getToastParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getButtonActionsAccess().getBundleParserRuleCall_1()); }
		ruleBundle
		{ after(grammarAccess.getButtonActionsAccess().getBundleParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getGroup_0()); }
		(rule__Operator__Group_0__0)
		{ after(grammarAccess.getOperatorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getGroup_1()); }
		(rule__Operator__Group_1__0)
		{ after(grammarAccess.getOperatorAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getGroup_2()); }
		(rule__Operator__Group_2__0)
		{ after(grammarAccess.getOperatorAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitAccess().getGroup_0()); }
		(rule__Unit__Group_0__0)
		{ after(grammarAccess.getUnitAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getGroup_1()); }
		(rule__Unit__Group_1__0)
		{ after(grammarAccess.getUnitAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__0__Impl
	rule__Application__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getAppKeyword_0()); }
	App
	{ after(grammarAccess.getApplicationAccess().getAppKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__1__Impl
	rule__Application__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getNameAssignment_1()); }
	(rule__Application__NameAssignment_1)
	{ after(grammarAccess.getApplicationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getAttributesAssignment_2()); }
	(rule__Application__AttributesAssignment_2)*
	{ after(grammarAccess.getApplicationAccess().getAttributesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationVersion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationVersion__Group__0__Impl
	rule__ApplicationVersion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationVersion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationVersionAccess().getApplicationVersionAction_0()); }
	()
	{ after(grammarAccess.getApplicationVersionAccess().getApplicationVersionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationVersion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationVersion__Group__1__Impl
	rule__ApplicationVersion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationVersion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationVersionAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getApplicationVersionAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationVersion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationVersion__Group__2__Impl
	rule__ApplicationVersion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationVersion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationVersionAccess().getAndroidSDKKeyword_2()); }
	AndroidSDK
	{ after(grammarAccess.getApplicationVersionAccess().getAndroidSDKKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationVersion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationVersion__Group__3__Impl
	rule__ApplicationVersion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationVersion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationVersionAccess().getColonKeyword_3()); }
	Colon
	{ after(grammarAccess.getApplicationVersionAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationVersion__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationVersion__Group__4__Impl
	rule__ApplicationVersion__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationVersion__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationVersionAccess().getResultAssignment_4()); }
	(rule__ApplicationVersion__ResultAssignment_4)
	{ after(grammarAccess.getApplicationVersionAccess().getResultAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationVersion__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationVersion__Group__5__Impl
	rule__ApplicationVersion__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationVersion__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationVersionAccess().getTargetsdkAssignment_5()); }
	(rule__ApplicationVersion__TargetsdkAssignment_5)?
	{ after(grammarAccess.getApplicationVersionAccess().getTargetsdkAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationVersion__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationVersion__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationVersion__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationVersionAccess().getENDTerminalRuleCall_6()); }
	RULE_END
	{ after(grammarAccess.getApplicationVersionAccess().getENDTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TargetSDK__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetSDK__Group__0__Impl
	rule__TargetSDK__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetSDK__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetSDKAccess().getTargetSDKAction_0()); }
	()
	{ after(grammarAccess.getTargetSDKAccess().getTargetSDKAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetSDK__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetSDK__Group__1__Impl
	rule__TargetSDK__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetSDK__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetSDKAccess().getTargetSDKKeyword_1()); }
	TargetSDK
	{ after(grammarAccess.getTargetSDKAccess().getTargetSDKKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetSDK__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetSDK__Group__2__Impl
	rule__TargetSDK__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetSDK__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetSDKAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getTargetSDKAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetSDK__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetSDK__Group__3__Impl
	rule__TargetSDK__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetSDK__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetSDKAccess().getResultAssignment_3()); }
	(rule__TargetSDK__ResultAssignment_3)
	{ after(grammarAccess.getTargetSDKAccess().getResultAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetSDK__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetSDK__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetSDK__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetSDKAccess().getMinsdkAssignment_4()); }
	(rule__TargetSDK__MinsdkAssignment_4)?
	{ after(grammarAccess.getTargetSDKAccess().getMinsdkAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MinSDK__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinSDK__Group__0__Impl
	rule__MinSDK__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinSDK__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinSDKAccess().getMinSDKAction_0()); }
	()
	{ after(grammarAccess.getMinSDKAccess().getMinSDKAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinSDK__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinSDK__Group__1__Impl
	rule__MinSDK__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinSDK__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinSDKAccess().getMinSDKKeyword_1()); }
	MinSDK
	{ after(grammarAccess.getMinSDKAccess().getMinSDKKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinSDK__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinSDK__Group__2__Impl
	rule__MinSDK__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MinSDK__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinSDKAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getMinSDKAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinSDK__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinSDK__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinSDK__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinSDKAccess().getResultAssignment_3()); }
	(rule__MinSDK__ResultAssignment_3)
	{ after(grammarAccess.getMinSDKAccess().getResultAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationPermissionList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationPermissionList__Group__0__Impl
	rule__ApplicationPermissionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationPermissionList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationPermissionListAccess().getPermissionsKeyword_0()); }
	Permissions
	{ after(grammarAccess.getApplicationPermissionListAccess().getPermissionsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationPermissionList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationPermissionList__Group__1__Impl
	rule__ApplicationPermissionList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationPermissionList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationPermissionListAccess().getPermissionsAssignment_1()); }
	(rule__ApplicationPermissionList__PermissionsAssignment_1)
	{ after(grammarAccess.getApplicationPermissionListAccess().getPermissionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationPermissionList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationPermissionList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationPermissionList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationPermissionListAccess().getGroup_2()); }
	(rule__ApplicationPermissionList__Group_2__0)*
	{ after(grammarAccess.getApplicationPermissionListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationPermissionList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationPermissionList__Group_2__0__Impl
	rule__ApplicationPermissionList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationPermissionList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationPermissionListAccess().getCommaKeyword_2_0()); }
	Comma
	{ after(grammarAccess.getApplicationPermissionListAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationPermissionList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationPermissionList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationPermissionList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationPermissionListAccess().getPermissionsAssignment_2_1()); }
	(rule__ApplicationPermissionList__PermissionsAssignment_2_1)
	{ after(grammarAccess.getApplicationPermissionListAccess().getPermissionsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationElementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationElementList__Group__0__Impl
	rule__ApplicationElementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationElementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationElementListAccess().getApplicationElementListAction_0()); }
	()
	{ after(grammarAccess.getApplicationElementListAccess().getApplicationElementListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationElementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationElementList__Group__1__Impl
	rule__ApplicationElementList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationElementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationElementListAccess().getElementsKeyword_1()); }
	Elements
	{ after(grammarAccess.getApplicationElementListAccess().getElementsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationElementList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationElementList__Group__2__Impl
	rule__ApplicationElementList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationElementList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationElementListAccess().getBEGINTerminalRuleCall_2()); }
	RULE_BEGIN
	{ after(grammarAccess.getApplicationElementListAccess().getBEGINTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationElementList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationElementList__Group__3__Impl
	rule__ApplicationElementList__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationElementList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationElementListAccess().getElementsAssignment_3()); }
	(rule__ApplicationElementList__ElementsAssignment_3)*
	{ after(grammarAccess.getApplicationElementListAccess().getElementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationElementList__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationElementList__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationElementList__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationElementListAccess().getENDTerminalRuleCall_4()); }
	RULE_END
	{ after(grammarAccess.getApplicationElementListAccess().getENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelKeyword_0()); }
	Model
	{ after(grammarAccess.getModelAccess().getModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
	(rule__Model__NameAssignment_1)
	{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fragment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fragment__Group__0__Impl
	rule__Fragment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fragment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentAccess().getFragmentKeyword_0()); }
	Fragment
	{ after(grammarAccess.getFragmentAccess().getFragmentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fragment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fragment__Group__1__Impl
	rule__Fragment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fragment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentAccess().getNameAssignment_1()); }
	(rule__Fragment__NameAssignment_1)
	{ after(grammarAccess.getFragmentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fragment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fragment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fragment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentAccess().getFragmentAttributesAssignment_2()); }
	(rule__Fragment__FragmentAttributesAssignment_2)?
	{ after(grammarAccess.getFragmentAccess().getFragmentAttributesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FragmentLayoutAttributes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentLayoutAttributes__Group__0__Impl
	rule__FragmentLayoutAttributes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentLayoutAttributes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentLayoutAttributesAccess().getBEGINTerminalRuleCall_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getFragmentLayoutAttributesAccess().getBEGINTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentLayoutAttributes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentLayoutAttributes__Group__1__Impl
	rule__FragmentLayoutAttributes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentLayoutAttributes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentLayoutAttributesAccess().getLayoutElementsAssignment_1()); }
	(rule__FragmentLayoutAttributes__LayoutElementsAssignment_1)
	{ after(grammarAccess.getFragmentLayoutAttributesAccess().getLayoutElementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentLayoutAttributes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentLayoutAttributes__Group__2__Impl
	rule__FragmentLayoutAttributes__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentLayoutAttributes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentLayoutAttributesAccess().getGroup_2()); }
	(rule__FragmentLayoutAttributes__Group_2__0)*
	{ after(grammarAccess.getFragmentLayoutAttributesAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentLayoutAttributes__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentLayoutAttributes__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentLayoutAttributes__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentLayoutAttributesAccess().getENDTerminalRuleCall_3()); }
	RULE_END
	{ after(grammarAccess.getFragmentLayoutAttributesAccess().getENDTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FragmentLayoutAttributes__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentLayoutAttributes__Group_2__0__Impl
	rule__FragmentLayoutAttributes__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentLayoutAttributes__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentLayoutAttributesAccess().getCommaKeyword_2_0()); }
	Comma
	{ after(grammarAccess.getFragmentLayoutAttributesAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentLayoutAttributes__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentLayoutAttributes__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentLayoutAttributes__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentLayoutAttributesAccess().getLayoutElementsAssignment_2_1()); }
	(rule__FragmentLayoutAttributes__LayoutElementsAssignment_2_1)
	{ after(grammarAccess.getFragmentLayoutAttributesAccess().getLayoutElementsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMap__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeMap__Group__0__Impl
	rule__TypeMap__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMap__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeMapAccess().getTypeMapAction_0()); }
	()
	{ after(grammarAccess.getTypeMapAccess().getTypeMapAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMap__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeMap__Group__1__Impl
	rule__TypeMap__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMap__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeMapAccess().getMapKeyword_1()); }
	Map
	{ after(grammarAccess.getTypeMapAccess().getMapKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMap__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeMap__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMap__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeMapAccess().getFragmenttypeattributeAssignment_2()); }
	(rule__TypeMap__FragmenttypeattributeAssignment_2)?
	{ after(grammarAccess.getTypeMapAccess().getFragmenttypeattributeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSetting__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSetting__Group__0__Impl
	rule__TypeSetting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSetting__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSettingAccess().getTypeSettingAction_0()); }
	()
	{ after(grammarAccess.getTypeSettingAccess().getTypeSettingAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSetting__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSetting__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSetting__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSettingAccess().getSettingsKeyword_1()); }
	Settings
	{ after(grammarAccess.getTypeSettingAccess().getSettingsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EditText__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EditText__Group__0__Impl
	rule__EditText__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EditText__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEditTextAccess().getEditTextKeyword_0()); }
	EditText
	{ after(grammarAccess.getEditTextAccess().getEditTextKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EditText__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EditText__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EditText__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEditTextAccess().getNameAssignment_1()); }
	(rule__EditText__NameAssignment_1)
	{ after(grammarAccess.getEditTextAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Spinner__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Spinner__Group__0__Impl
	rule__Spinner__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Spinner__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpinnerAccess().getSpinnerKeyword_0()); }
	Spinner
	{ after(grammarAccess.getSpinnerAccess().getSpinnerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Spinner__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Spinner__Group__1__Impl
	rule__Spinner__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Spinner__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpinnerAccess().getNameAssignment_1()); }
	(rule__Spinner__NameAssignment_1)
	{ after(grammarAccess.getSpinnerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Spinner__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Spinner__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Spinner__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpinnerAccess().getGroup_2()); }
	(rule__Spinner__Group_2__0)?
	{ after(grammarAccess.getSpinnerAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Spinner__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Spinner__Group_2__0__Impl
	rule__Spinner__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Spinner__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpinnerAccess().getContentKeyword_2_0()); }
	Content
	{ after(grammarAccess.getSpinnerAccess().getContentKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Spinner__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Spinner__Group_2__1__Impl
	rule__Spinner__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Spinner__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpinnerAccess().getColonKeyword_2_1()); }
	Colon
	{ after(grammarAccess.getSpinnerAccess().getColonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Spinner__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Spinner__Group_2__2__Impl
	rule__Spinner__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Spinner__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpinnerAccess().getSpinnerconAssignment_2_2()); }
	(rule__Spinner__SpinnerconAssignment_2_2)
	{ after(grammarAccess.getSpinnerAccess().getSpinnerconAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Spinner__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Spinner__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Spinner__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpinnerAccess().getGroup_2_3()); }
	(rule__Spinner__Group_2_3__0)*
	{ after(grammarAccess.getSpinnerAccess().getGroup_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Spinner__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Spinner__Group_2_3__0__Impl
	rule__Spinner__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Spinner__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpinnerAccess().getCommaKeyword_2_3_0()); }
	Comma
	{ after(grammarAccess.getSpinnerAccess().getCommaKeyword_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Spinner__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Spinner__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Spinner__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpinnerAccess().getSpinnerconAssignment_2_3_1()); }
	(rule__Spinner__SpinnerconAssignment_2_3_1)
	{ after(grammarAccess.getSpinnerAccess().getSpinnerconAssignment_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TextView__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextView__Group__0__Impl
	rule__TextView__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextView__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextViewAccess().getTextviewKeyword_0()); }
	Textview
	{ after(grammarAccess.getTextViewAccess().getTextviewKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextView__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextView__Group__1__Impl
	rule__TextView__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TextView__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextViewAccess().getNameAssignment_1()); }
	(rule__TextView__NameAssignment_1)
	{ after(grammarAccess.getTextViewAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextView__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextView__Group__2__Impl
	rule__TextView__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TextView__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextViewAccess().getContentKeyword_2()); }
	Content
	{ after(grammarAccess.getTextViewAccess().getContentKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextView__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextView__Group__3__Impl
	rule__TextView__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TextView__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextViewAccess().getColonKeyword_3()); }
	Colon
	{ after(grammarAccess.getTextViewAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextView__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextView__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextView__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextViewAccess().getTextAssignment_4()); }
	(rule__TextView__TextAssignment_4)
	{ after(grammarAccess.getTextViewAccess().getTextAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Button__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__0__Impl
	rule__Button__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getButtonAction_0()); }
	()
	{ after(grammarAccess.getButtonAccess().getButtonAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__1__Impl
	rule__Button__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getButtonKeyword_1()); }
	Button
	{ after(grammarAccess.getButtonAccess().getButtonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__2__Impl
	rule__Button__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getNameAssignment_2()); }
	(rule__Button__NameAssignment_2)
	{ after(grammarAccess.getButtonAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__3__Impl
	rule__Button__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getButtonAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__4__Impl
	rule__Button__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getGroup_4()); }
	(rule__Button__Group_4__0)?
	{ after(grammarAccess.getButtonAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getENDTerminalRuleCall_5()); }
	RULE_END
	{ after(grammarAccess.getButtonAccess().getENDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Button__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group_4__0__Impl
	rule__Button__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getActionsAssignment_4_0()); }
	(rule__Button__ActionsAssignment_4_0)
	{ after(grammarAccess.getButtonAccess().getActionsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getGroup_4_1()); }
	(rule__Button__Group_4_1__0)*
	{ after(grammarAccess.getButtonAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Button__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group_4_1__0__Impl
	rule__Button__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getCommaKeyword_4_1_0()); }
	Comma
	{ after(grammarAccess.getButtonAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getActionsAssignment_4_1_1()); }
	(rule__Button__ActionsAssignment_4_1_1)
	{ after(grammarAccess.getButtonAccess().getActionsAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Toast__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Toast__Group__0__Impl
	rule__Toast__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Toast__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToastAccess().getToastKeyword_0()); }
	Toast
	{ after(grammarAccess.getToastAccess().getToastKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Toast__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Toast__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Toast__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToastAccess().getTextAssignment_1()); }
	(rule__Toast__TextAssignment_1)
	{ after(grammarAccess.getToastAccess().getTextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bundle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bundle__Group__0__Impl
	rule__Bundle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bundle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBundleAccess().getBundleKeyword_0()); }
	Bundle
	{ after(grammarAccess.getBundleAccess().getBundleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bundle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bundle__Group__1__Impl
	rule__Bundle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Bundle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBundleAccess().getBundleRecipientAssignment_1()); }
	(rule__Bundle__BundleRecipientAssignment_1)
	{ after(grammarAccess.getBundleAccess().getBundleRecipientAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bundle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bundle__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bundle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBundleAccess().getHolderAssignment_2()); }
	(rule__Bundle__HolderAssignment_2)?
	{ after(grammarAccess.getBundleAccess().getHolderAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Holder__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Holder__Group__0__Impl
	rule__Holder__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Holder__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHolderAccess().getHolderKeyword_0()); }
	Holder
	{ after(grammarAccess.getHolderAccess().getHolderKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Holder__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Holder__Group__1__Impl
	rule__Holder__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Holder__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHolderAccess().getHolAssignment_1()); }
	(rule__Holder__HolAssignment_1)
	{ after(grammarAccess.getHolderAccess().getHolAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Holder__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Holder__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Holder__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHolderAccess().getGroup_2()); }
	(rule__Holder__Group_2__0)*
	{ after(grammarAccess.getHolderAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Holder__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Holder__Group_2__0__Impl
	rule__Holder__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Holder__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHolderAccess().getCommaKeyword_2_0()); }
	Comma
	{ after(grammarAccess.getHolderAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Holder__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Holder__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Holder__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHolderAccess().getHolAssignment_2_1()); }
	(rule__Holder__HolAssignment_2_1)
	{ after(grammarAccess.getHolderAccess().getHolAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FilterQuery__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterQuery__Group__0__Impl
	rule__FilterQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterQuery__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterQueryAccess().getFilterQueryAction_0()); }
	()
	{ after(grammarAccess.getFilterQueryAccess().getFilterQueryAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterQuery__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterQuery__Group__1__Impl
	rule__FilterQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterQuery__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterQueryAccess().getFilterQueryKeyword_1()); }
	FilterQuery
	{ after(grammarAccess.getFilterQueryAccess().getFilterQueryKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterQuery__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterQuery__Group__2__Impl
	rule__FilterQuery__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterQuery__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterQueryAccess().getNameAssignment_2()); }
	(rule__FilterQuery__NameAssignment_2)
	{ after(grammarAccess.getFilterQueryAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterQuery__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterQuery__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterQuery__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterQueryAccess().getFilterAttributesAssignment_3()); }
	(rule__FilterQuery__FilterAttributesAssignment_3)
	{ after(grammarAccess.getFilterQueryAccess().getFilterAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Distance__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Distance__Group__0__Impl
	rule__Distance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceAccess().getDistKeyword_0()); }
	Dist
	{ after(grammarAccess.getDistanceAccess().getDistKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Distance__Group__1__Impl
	rule__Distance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getDistanceAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Distance__Group__2__Impl
	rule__Distance__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceAccess().getUnitAssignment_2()); }
	(rule__Distance__UnitAssignment_2)
	{ after(grammarAccess.getDistanceAccess().getUnitAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Distance__Group__3__Impl
	rule__Distance__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceAccess().getOperatorAssignment_3()); }
	(rule__Distance__OperatorAssignment_3)
	{ after(grammarAccess.getDistanceAccess().getOperatorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Distance__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceAccess().getResultsAssignment_4()); }
	(rule__Distance__ResultsAssignment_4)
	{ after(grammarAccess.getDistanceAccess().getResultsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operator__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_0__0__Impl
	rule__Operator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getLessAction_0_0()); }
	()
	{ after(grammarAccess.getOperatorAccess().getLessAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getGreaterThanSignKeyword_0_1()); }
	GreaterThanSign
	{ after(grammarAccess.getOperatorAccess().getGreaterThanSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_1__0__Impl
	rule__Operator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getMoreAction_1_0()); }
	()
	{ after(grammarAccess.getOperatorAccess().getMoreAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getLessThanSignKeyword_1_1()); }
	LessThanSign
	{ after(grammarAccess.getOperatorAccess().getLessThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operator__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_2__0__Impl
	rule__Operator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getEqualAction_2_0()); }
	()
	{ after(grammarAccess.getOperatorAccess().getEqualAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getEqualsSignKeyword_2_1()); }
	EqualsSign
	{ after(grammarAccess.getOperatorAccess().getEqualsSignKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group_0__0__Impl
	rule__Unit__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getMetersAction_0_0()); }
	()
	{ after(grammarAccess.getUnitAccess().getMetersAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getMKeyword_0_1()); }
	M
	{ after(grammarAccess.getUnitAccess().getMKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group_1__0__Impl
	rule__Unit__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getImperialAction_1_0()); }
	()
	{ after(grammarAccess.getUnitAccess().getImperialAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getFKeyword_1_1()); }
	F
	{ after(grammarAccess.getUnitAccess().getFKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndroidAppProject__ApplicationsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndroidAppProjectAccess().getApplicationsApplicationParserRuleCall_0()); }
		ruleApplication
		{ after(grammarAccess.getAndroidAppProjectAccess().getApplicationsApplicationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getApplicationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__AttributesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationAccess().getAttributesApplicationAttributeParserRuleCall_2_0()); }
		ruleApplicationAttribute
		{ after(grammarAccess.getApplicationAccess().getAttributesApplicationAttributeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationVersion__ResultAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationVersionAccess().getResultNumberParserRuleCall_4_0()); }
		ruleNumber
		{ after(grammarAccess.getApplicationVersionAccess().getResultNumberParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationVersion__TargetsdkAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationVersionAccess().getTargetsdkTargetSDKParserRuleCall_5_0()); }
		ruleTargetSDK
		{ after(grammarAccess.getApplicationVersionAccess().getTargetsdkTargetSDKParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetSDK__ResultAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetSDKAccess().getResultNumberParserRuleCall_3_0()); }
		ruleNumber
		{ after(grammarAccess.getTargetSDKAccess().getResultNumberParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetSDK__MinsdkAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetSDKAccess().getMinsdkMinSDKParserRuleCall_4_0()); }
		ruleMinSDK
		{ after(grammarAccess.getTargetSDKAccess().getMinsdkMinSDKParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinSDK__ResultAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMinSDKAccess().getResultNumberParserRuleCall_3_0()); }
		ruleNumber
		{ after(grammarAccess.getMinSDKAccess().getResultNumberParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationPermissionList__PermissionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationPermissionListAccess().getPermissionsPermissionParserRuleCall_1_0()); }
		rulePermission
		{ after(grammarAccess.getApplicationPermissionListAccess().getPermissionsPermissionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationPermissionList__PermissionsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationPermissionListAccess().getPermissionsPermissionParserRuleCall_2_1_0()); }
		rulePermission
		{ after(grammarAccess.getApplicationPermissionListAccess().getPermissionsPermissionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Permission__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPermissionAccess().getNamePACKAGE_NAMETerminalRuleCall_0()); }
		RULE_PACKAGE_NAME
		{ after(grammarAccess.getPermissionAccess().getNamePACKAGE_NAMETerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationElementList__ElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationElementListAccess().getElementsApplicationElementParserRuleCall_3_0()); }
		ruleApplicationElement
		{ after(grammarAccess.getApplicationElementListAccess().getElementsApplicationElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fragment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFragmentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFragmentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fragment__FragmentAttributesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFragmentAccess().getFragmentAttributesFragmentLayoutAttributesParserRuleCall_2_0()); }
		ruleFragmentLayoutAttributes
		{ after(grammarAccess.getFragmentAccess().getFragmentAttributesFragmentLayoutAttributesParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentLayoutAttributes__LayoutElementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFragmentLayoutAttributesAccess().getLayoutElementsLayoutElementParserRuleCall_1_0()); }
		ruleLayoutElement
		{ after(grammarAccess.getFragmentLayoutAttributesAccess().getLayoutElementsLayoutElementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentLayoutAttributes__LayoutElementsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFragmentLayoutAttributesAccess().getLayoutElementsLayoutElementParserRuleCall_2_1_0()); }
		ruleLayoutElement
		{ after(grammarAccess.getFragmentLayoutAttributesAccess().getLayoutElementsLayoutElementParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMap__FragmenttypeattributeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeMapAccess().getFragmenttypeattributeFragmentTypeAttributesParserRuleCall_2_0()); }
		ruleFragmentTypeAttributes
		{ after(grammarAccess.getTypeMapAccess().getFragmenttypeattributeFragmentTypeAttributesParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentTypeAttributes__FilterAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFragmentTypeAttributesAccess().getFilterFilterQueryParserRuleCall_0()); }
		ruleFilterQuery
		{ after(grammarAccess.getFragmentTypeAttributesAccess().getFilterFilterQueryParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EditText__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEditTextAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEditTextAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Spinner__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpinnerAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSpinnerAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Spinner__SpinnerconAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpinnerAccess().getSpinnerconSpinnerConParserRuleCall_2_2_0()); }
		ruleSpinnerCon
		{ after(grammarAccess.getSpinnerAccess().getSpinnerconSpinnerConParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Spinner__SpinnerconAssignment_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpinnerAccess().getSpinnerconSpinnerConParserRuleCall_2_3_1_0()); }
		ruleSpinnerCon
		{ after(grammarAccess.getSpinnerAccess().getSpinnerconSpinnerConParserRuleCall_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinnerCon__TextAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpinnerConAccess().getTextSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getSpinnerConAccess().getTextSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextView__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextViewAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTextViewAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextView__TextAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextViewAccess().getTextSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getTextViewAccess().getTextSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getButtonAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__ActionsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getActionsButtonActionsParserRuleCall_4_0_0()); }
		ruleButtonActions
		{ after(grammarAccess.getButtonAccess().getActionsButtonActionsParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__ActionsAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getActionsButtonActionsParserRuleCall_4_1_1_0()); }
		ruleButtonActions
		{ after(grammarAccess.getButtonAccess().getActionsButtonActionsParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Toast__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getToastAccess().getTextSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getToastAccess().getTextSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bundle__BundleRecipientAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBundleAccess().getBundleRecipientFragmentCrossReference_1_0()); }
		(
			{ before(grammarAccess.getBundleAccess().getBundleRecipientFragmentIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBundleAccess().getBundleRecipientFragmentIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getBundleAccess().getBundleRecipientFragmentCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bundle__HolderAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBundleAccess().getHolderHolderParserRuleCall_2_0()); }
		ruleHolder
		{ after(grammarAccess.getBundleAccess().getHolderHolderParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Holder__HolAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHolderAccess().getHolDataholdersCrossReference_1_0()); }
		(
			{ before(grammarAccess.getHolderAccess().getHolDataholdersIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getHolderAccess().getHolDataholdersIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getHolderAccess().getHolDataholdersCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Holder__HolAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHolderAccess().getHolDataholdersCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getHolderAccess().getHolDataholdersIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getHolderAccess().getHolDataholdersIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getHolderAccess().getHolDataholdersCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterQuery__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterQueryAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFilterQueryAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterQuery__FilterAttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterQueryAccess().getFilterAttributesFilterAttributesParserRuleCall_3_0()); }
		ruleFilterAttributes
		{ after(grammarAccess.getFilterQueryAccess().getFilterAttributesFilterAttributesParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterAttributes__DistanceAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterAttributesAccess().getDistanceDistanceParserRuleCall_0()); }
		ruleDistance
		{ after(grammarAccess.getFilterAttributesAccess().getDistanceDistanceParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__UnitAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDistanceAccess().getUnitUnitParserRuleCall_2_0()); }
		ruleUnit
		{ after(grammarAccess.getDistanceAccess().getUnitUnitParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__OperatorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDistanceAccess().getOperatorOperatorParserRuleCall_3_0()); }
		ruleOperator
		{ after(grammarAccess.getDistanceAccess().getOperatorOperatorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__ResultsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDistanceAccess().getResultsNumberParserRuleCall_4_0()); }
		ruleNumber
		{ after(grammarAccess.getDistanceAccess().getResultsNumberParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
